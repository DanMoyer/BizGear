<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Database</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord">
            <summary>
            Represents an event entry to be persisted in a database.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord.InstanceName">
            <summary>
            Gets or sets the instance name where the entries are generated from.
            </summary>
            <value>The instance name.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord.ProviderId">
            <summary>
            Gets or sets the id of the source originating the event.
            </summary>
            <value>The event source id.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord.ProviderName">
            <summary>
            Gets or sets the friendly name of the class that is derived from the event source.
            </summary>
            <value>The provider name.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord.EventId">
            <summary>
            Gets or sets the event id.
            </summary>
            <value>The event id.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord.EventKeywords">
            <summary>
            Gets or sets the event keywords.
            </summary>
            <value>The event keywords.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord.Level">
            <summary>
            Gets or sets the event level.
            </summary>
            <value>The event level.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord.Opcode">
            <summary>
            Gets or sets the operation code.
            </summary>
            <value>The operation code.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord.Task">
            <summary>
            Gets or sets the task for the event.
            </summary>
            <value>The task for the event.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord.Timestamp">
            <summary>
            Gets or sets the timestamp of the event.
            </summary>
            <value>The timestamp of the event.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord.Version">
            <summary>
            Gets or sets the event version.
            </summary>
            <value>The event version.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord.FormattedMessage">
            <summary>
            Gets or sets the formatted message.
            </summary>
            <value>The formatted message.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord.Payload">
            <summary>
            Gets or sets the event payload.
            </summary>
            <value>The event payload.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink">
            <summary>
            Sink that asynchronously writes entries to SQL Server database.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink.#ctor(System.String,System.String,System.String,System.TimeSpan,System.Int32,System.Int32,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink"/> class with the specified instance name, connection string and table name.
            </summary>
            <param name="instanceName">The name of the instance originating the entries.</param>
            <param name="connectionString">The connection string.</param>
            <param name="tableName">The name of the table.</param>
            <param name="bufferingInterval">The buffering interval between each batch publishing.</param>
            <param name="bufferingCount">The number of entries that will trigger a batch publishing.</param>
            <param name="maxBufferSize">The maximum number of entries that can be buffered while it's sending to the store before the sink starts dropping entries.</param>      
            <param name="onCompletedTimeout">Defines a timeout interval for when flushing the entries after an <see cref="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink.OnCompleted"/> call is received and before disposing the sink.
            This means that if the timeout period elapses, some event entries will be dropped and not sent to the store. Normally, calling <see cref="M:System.IDisposable.Dispose"/> on 
            the <see cref="T:System.Diagnostics.Tracing.EventListener"/> will block until all the entries are flushed or the interval elapses.
            If <see langword="null"/> is specified, then the call will block indefinitely until the flush operation finishes.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink.FlushAsync">
            <summary>
            Flushes the buffer content to <see cref="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink.PublishEventsAsync(System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord})"/>.
            </summary>
            <returns>The Task that flushes the buffer.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink.OnCompleted">
            <summary>
            Notifies the observer that the provider has finished sending push-based notifications.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink.OnError(System.Exception)">
            <summary>
            Notifies the observer that the provider has experienced an error condition.
            </summary>
            <param name="error">An object that provides additional information about the error.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink.OnNext(Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord)">
            <summary>
            Provides the sink with new data to write.
            </summary>
            <param name="value">The current entry to write to the database.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing">A value indicating whether or not the class is disposing.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.SqlDatabaseLog">
            <summary>
            Factories and helpers for using the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.SqlDatabaseLog.DefaultTableName">
            <summary>
            Default table name used to write traces.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.SqlDatabaseLog.LogToSqlDatabase(System.IObservable{Microsoft.Practices.EnterpriseLibrary.SemanticLogging.EventEntry},System.String,System.String,System.String,System.Nullable{System.TimeSpan},System.Int32,System.Nullable{System.TimeSpan},System.Int32)">
            <summary>
            Subscribes to an <see cref="T:System.IObservable`1"/> using a <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink"/>.
            </summary>
            <param name="eventStream">The event stream. Typically this is an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.ObservableEventListener"/>.</param>
            <param name="instanceName">The name of the instance originating the entries.</param>
            <param name="connectionString">The connection string.</param>
            <param name="tableName">The name of the table.</param>
            <param name="bufferingInterval">The buffering interval between each batch publishing. Default value is <see cref="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.Buffering.DefaultBufferingInterval"/>.</param>
            <param name="bufferingCount">The number of entries that will trigger a batch publishing.</param>
            <param name="onCompletedTimeout">Defines a timeout interval for when flushing the entries after an <see cref="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink.OnCompleted"/> call is received and before disposing the sink.
            This means that if the timeout period elapses, some event entries will be dropped and not sent to the store. Normally, calling <see cref="M:System.IDisposable.Dispose"/> on 
            the <see cref="T:System.Diagnostics.Tracing.EventListener"/> will block until all the entries are flushed or the interval elapses.
            If <see langword="null"/> is specified, then the call will block indefinitely until the flush operation finishes.</param>
            <param name="maxBufferSize">The maximum number of entries that can be buffered while it's sending to Windows Azure Storage before the sink starts dropping entries.
            This means that if the timeout period elapses, some event entries will be dropped and not sent to the store. Normally, calling <see cref="M:System.IDisposable.Dispose"/> on
            the <see cref="T:System.Diagnostics.Tracing.EventListener"/> will block until all the entries are flushed or the interval elapses.
            If <see langword="null"/> is specified, then the call will block indefinitely until the flush operation finishes.</param>
            <returns>A subscription to the sink that can be disposed to unsubscribe the sink and dispose it, or to get access to the sink instance.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.SqlDatabaseLog.CreateListener(System.String,System.String,System.String,System.Nullable{System.TimeSpan},System.Int32,System.Nullable{System.TimeSpan},System.Int32)">
            <summary>
            Subscribes to the listener using a <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink"/>.
            </summary>
            <param name="instanceName">The name of the instance originating the entries.</param>
            <param name="connectionString">The connection string.</param>
            <param name="tableName">The name of the table.</param>
            <param name="bufferingInterval">The buffering interval between each batch publishing.</param>
            <param name="bufferingCount">The number of entries that will trigger a batch publishing.</param>
            <param name="listenerDisposeTimeout">Defines a timeout interval for the flush operation when the listener is disposed.
            This means that if the timeout period elapses, some event entries will be dropped and not sent to the store. Calling <see cref="M:System.IDisposable.Dispose"/> on 
            the <see cref="T:System.Diagnostics.Tracing.EventListener"/> will block until all the entries are flushed or the interval elapses.
            If <see langword="null"/> is specified, then the call will block indefinitely until the flush operation finishes.</param>
            <param name="maxBufferSize">The maximum number of entries that can be buffered while it's sending to Windows Azure Storage before the sink starts dropping entries.
            This means that if the timeout period elapses, some event entries will be dropped and not sent to the store. Normally, calling <see cref="M:System.IDisposable.Dispose"/> on
            the <see cref="T:System.Diagnostics.Tracing.EventListener"/> will block until all the entries are flushed or the interval elapses.
            If <see langword="null"/> is specified, then the call will block indefinitely until the flush operation finishes.</param>
            <returns>An event listener that uses <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.SqlDatabaseSink"/> to log events.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventRecordExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.EventEntry"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventRecordExtensions.SubscribeWithConversion(System.IObservable{Microsoft.Practices.EnterpriseLibrary.SemanticLogging.EventEntry},System.IObserver{Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord})">
            <summary>
            Subscribes an <see cref="T:System.IObserver`1"/> sink by doing a straight projection of a sequence of <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.EventEntry"/>
            and converting it to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord"/> entity.
            </summary>
            <param name="source">The original stream of events.</param>
            <param name="sink">The underlying sink.</param>
            <returns>A subscription token to unsubscribe to the event stream.</returns>
            <remarks>When using Reactive Extensions (Rx), this is equivalent to doing a Select statement on the <paramref name="source"/> to convert it to <see cref="T:System.IObservable`1"/> and then
            calling Subscribe on it.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.EventRecordExtensions.TryConvertToEventRecord(Microsoft.Practices.EnterpriseLibrary.SemanticLogging.EventEntry)">
            <summary>
            Converts an <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.EventEntry"/> to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.Database.EventRecord"/>.
            </summary>
            <param name="entry">The entry to convert.</param>
            <returns>A converted entry, or <see langword="null"/> if the payload is invalid.</returns>
        </member>
    </members>
</doc>
